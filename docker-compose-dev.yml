version: '2'
services:
    nginx-proxy:
     image: jwilder/nginx-proxy
     container_name: nginx-proxy-dev
     ports:
         - "80:80"
     volumes:
         - /var/run/docker.sock:/tmp/docker.sock:ro
    public:
     image: dmitrovskiy/docker-nginx-php-fpm:1.0.0-alpine
     container_name: app-public
     environment:
         - VIRTUAL_HOST=public.site.org
     volumes:
         - ./modules/public/app:/var/www/html/web
         - ./modules/public/src/default.conf:/etc/nginx/conf.d/default.conf
    paypal:
     image: dmitrovskiy/docker-nginx-php-fpm:1.0.0-alpine
     container_name: app-paypal
     environment:
         - VIRTUAL_HOST=paypal.site.org
     volumes:
         - ./modules/paypal/app:/var/www/html/web
         - ./modules/paypal/src/default.conf:/etc/nginx/conf.d/default.conf

    reports:
     image: mapleukraine/yacht-nginx-php-lo:1.0.0
     container_name: app-reports
     environment:
         - VIRTUAL_HOST=reports.site.org
         - ALIAS_DOMAIN=reports.site.org
         - DISPLAY=$DISPLAY 
         - REPORT_DIR=/home/application/reports
         - REPORT_DONE_DIR=/home/application/reports-done
         - RMQ_SERVER=rabbitmq
         - RMQ_PORT=5672
         - RMQ_LOGIN=admin
         - RMQ_PASSWORD=123456789
         - LOG_LEVEL=DEBUG
         - POSTGREST_HOST=postgrest
     volumes:
         - ./modules/reports/dev/site:/app
         - ./modules/reports/dev/nginx/vhost.common.d:/opt/docker/etc/nginx/vhost.common.d
         - ./modules/reports/dev/basic:/home/application/.config/libreoffice/4/user/basic
         - ./modules/reports/dev/basic:/root/.config/libreoffice/4/user/basic
         - ./modules/reports/dev/reports:/home/application/reports
         - ./modules/reports/dev/reports-done:/home/application/reports-done
         - ./modules/reports/dev/supervisor/conf:/etc/supervisor/conf.d
         - /tmp/.X11-unix:/tmp/.X11-unix
         - $HOME/.Xauthority:/root/.Xauthority
     depends_on:
         - postgrest
         - rabbitmq

    invoice-dev:
     image: dmitrovskiy/docker-nginx-php-fpm:1.0.0-alpine # orionla2/invoice_microservice:latest
     container_name: app-invoice
     environment:
         - VIRTUAL_HOST=invoice.site.org
     volumes:
         - ./modules/invoice/app:/var/www/html/web
         - ./modules/invoice/src/default.conf:/etc/nginx/conf.d/default.conf
    alerts:
     image: orionla2/alpine-node-6.9.2:1.0.1 #dmitrovskiy/docker-nginx-php-fpm:1.0.0-alpine # orionla2/invoice_microservice:latest
     container_name: app-alerts
     environment:
         - "PGUSER=postgres"
         - "PGPASSWORD=1q2w3e4r"
         - "PGDATABASE=postgres"
         - "PGHOST=postgresql"
     links:
         - postgresql:postgresql
     volumes:
         - ./modules/alerts/app:/var/www/html/web
         #- ./modules/alerts/app:/var/www/html/web
         #- ./modules/alerts/src/default.conf:/etc/nginx/conf.d/default.conf
     ports:
         - "5672"
         #- "5432"
     #links:
         #- postgresql:postgresql
     #command: /bin/sh -c "node /var/www/html/web/listener.js *.# && node /var/www/html/web/listener.js *.*.user.*.*"
     depends_on:
         - rabbitmq
     restart: always
    rabbitmq:
     image: rabbitmq:3.5.7
     container_name: rabbitmq
     env_file:
         - ./modules/rabbitmq/src/rabbitmq.env
     ports:
         - "5672"
    postgresql:
     image: postgres
     container_name: postgresql
     ports:
         - "5432:5432"
     environment:
         - "POSTGRES_USER=postgres"
         - "POSTGRES_PASSWORD=1q2w3e4r"
         - "POSTGRES_DB=postgres"
         - VIRTUAL_HOST=postgres.site.org
     volumes:
         - ./srv/docker/postgresql/data:/var/lib/postgresql/data
         - ./srv/docker/db_backup:/home
     
    schema_setup:
        image: mapleukraine/yacht-migration:1.1.0
        container_name: schema
        environment:
         - "POSTGRES_USER=postgres"
         - "POSTGRES_PASSWORD=1q2w3e4r"
         - "POSTGRES_DB=postgres"
         - "PGHOST=target_service"
         - "PGPASSWORD=1q2w3e4r"
         - "SQITCH_BUNDLE_REPO=git@bitbucket.org:mapleukraine/ymigration.git"
         - "SQITCH_BUNDLE_BRANCH=master"
         - "SQITCH_DEPLOY_CHANGE="
        links:
         - postgresql:target_service
        volumes:
         - ./modules/migration/app:/src
        #volumes:
        # - /app:/src
        depends_on:
         - postgresql
        entrypoint: /bin/bash
        command: /src/start.sh

    postgrest:
     build: dockerfiles/main
     container_name: postgrest
     environment:
         - "POSTGREST_VERSION=0.3.2.0"
         - "POSTGREST_DBHOST=postgresql"
         - "POSTGREST_DBPORT=5432"
         - "POSTGREST_DBNAME=postgres"
         - "POSTGREST_ANONYMOUS=guest"
         - "POSTGREST_DBUSER=authenticator"
         - "POSTGREST_SCHEMA=my_yacht"
         - "POSTGREST_DBPASS=password"
         - "POSTGREST_PORT=80"
         - VIRTUAL_HOST=site.org
     links:
         - postgresql:postgresql
     depends_on:
         - postgresql
